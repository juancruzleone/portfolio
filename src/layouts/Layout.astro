---
import { defaultLang } from '../i18n/ui';

const lang = Astro.cookies.get('lang')?.value || defaultLang;
---

<!doctype html>
<html lang={lang}>
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/logo-2.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Juan Cruz Leone | Portfolio</title>
</head>
<body class="bg-principal-light dark:bg-principal transition-colors duration-300">
    <div class="max-w-[1000px] mx-auto mt-10 px-4">
        <header class="sticky top-0 z-50">
            <nav class="border border-contenedor bg-black rounded-md p-6 pl-4 relative">
                <div class="flex justify-between items-center">
                    <button id="menuToggle" class="md:hidden text-white focus:outline-none">
                        <svg class="w-8 h-8" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
                        </svg>
                    </button>
                    <ul id="navMenu" class="hidden md:flex flex-col md:flex-row md:items-center w-full md:w-auto absolute md:static top-full left-0 bg-black md:bg-transparent rounded-md shadow-lg md:shadow-none md:space-x-6 p-4 md:p-0 transition-all duration-300 ease-in-out">
                        <li><a href="#home" class="text-white font-montserrat text-base block md:inline m-2 md:m-0 hover:border-b-[2px] border-white" data-i18n="nav.home"></a></li>
                        <li><a href="#about-me" class="text-white font-montserrat text-base block md:inline m-2 md:m-0 hover:border-b-[2px] border-white" data-i18n="nav.aboutme"></a></li>
                        <li><a href="#skills" class="text-white font-montserrat text-base block md:inline m-2 md:m-0 hover:border-b-[2px] border-white" data-i18n="nav.skills"></a></li>
                        <li><a href="#projects" class="text-white font-montserrat text-base block md:inline m-2 md:m-0 hover:border-b-[2px] border-white" data-i18n="nav.projects"></a></li>
                        <li><a href="#contact" class="text-white font-montserrat text-base block md:inline m-2 md:m-0 hover:border-b-[2px] border-white" data-i18n="nav.contact"></a></li>
                        <li><a href="cv.pdf" target="_blank" rel="noopener noreferrer" class="text-white font-montserrat text-base block md:inline m-2 md:m-0 border border-white p-1 rounded hover:bg-[#2d2d2d] dark:hover:bg-[#2d2d2d]" data-i18n="nav.buttonCV"></a></li>
                    </ul>
                    <div class="flex">
                        <button id="themeSwitch" class="border border-contenedor rounded mr-4 bg-black hover:bg-[#2d2d2d] hover:dark:bg-[#2d2d2d]">
                            <img src="/sol.svg" alt="Theme" width="30" height="30" class="p-2 pb-2" id="themeIcon">
                        </button>
                        <button id="langSwitch" class="border border-contenedor rounded bg-black hover:bg-[#2d2d2d] hover:dark:bg-[#2d2d2d]">
                            <img src="/traductor.svg" alt="Traductor" width="30" height="30" class="p-2 pb-2">
                        </button>
                    </div>
                </div>
            </nav>
        </header>
        <slot />
    </div>

    <script>
        import { ui, defaultLang } from '../i18n/ui';

        let currentLang = localStorage.getItem('lang') || '${lang}';
        let currentTheme = localStorage.getItem('theme') || 'light';

        function switchLanguage() {
            currentLang = currentLang === 'en' ? 'es' : 'en';
            localStorage.setItem('lang', currentLang);
            updateContent();
        }

        function switchTheme() {
            currentTheme = currentTheme === 'light' ? 'dark' : 'light';
            localStorage.setItem('theme', currentTheme);
            updateTheme();
        }

        function updateContent() {
            document.querySelectorAll('[data-i18n]').forEach(el => {
                const key = el.getAttribute('data-i18n');
                if (key) {
                    el.textContent = key.split('.').reduce((obj, k) => obj && obj[k], ui[currentLang]) || key;
                }
            });
            document.documentElement.lang = currentLang;
        }

        function updateTheme() {
            if (currentTheme === 'dark') {
                document.documentElement.classList.add('dark');
                document.getElementById('themeIcon').src = '/luna.svg';
            } else {
                document.documentElement.classList.remove('dark');
                document.getElementById('themeIcon').src = '/sol.svg';
            }
        }

        document.getElementById('langSwitch').addEventListener('click', switchLanguage);
        document.getElementById('themeSwitch').addEventListener('click', switchTheme);

        document.getElementById('menuToggle').addEventListener('click', () => {
            const navMenu = document.getElementById('navMenu');
            navMenu.classList.toggle('hidden');
        });

        document.addEventListener('DOMContentLoaded', () => {
            localStorage.setItem('lang', currentLang);
            localStorage.setItem('theme', currentTheme);
            updateContent();
            updateTheme();
        });
    </script>
</body>
</html>

<style>
    html, body {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        overflow-x: hidden;
    }
</style>
