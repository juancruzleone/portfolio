---
import { defaultLang } from '../i18n/ui';

const lang = Astro.cookies.get('lang')?.value || defaultLang;
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/logo-2.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Juan Cruz Leone | Portfolio</title>

		<!-- Meta Description for SEO -->
		<meta name="description" content="Juan Cruz Leone, portfolio showcasing web development projects, UI/UX design, and coding skills. Explore my work in front-end, back-end, and full-stack development." />

		<!-- Open Graph Meta Tags for Social Sharing -->
		<meta property="og:title" content="Juan Cruz Leone | Portfolio" />
		<meta property="og:description" content="Juan Cruz Leone, portfolio showcasing web development projects, UI/UX design, and coding skills. Explore my work in front-end, back-end, and full-stack development." />
		<meta property="og:url" content="https://www.juancruzleone.dev" />
		<meta property="og:type" content="website" />
		
		<!-- Twitter Card Meta Tags -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content="Juan Cruz Leone | Portfolio" />
		<meta name="twitter:description" content="Juan Cruz Leone, portfolio showcasing web development projects, UI/UX design, and coding skills. Explore my work in front-end, back-end, and full-stack development." />
		<meta name="twitter:url" content="https://www.juancruzleone.dev" />
	</head>
	<body class="bg-principal-light dark:bg-principal transition-colors duration-300">
		<div class="max-w-[1000px] mx-auto mt-10 px-4">
			<header class="sticky top-0 z-50">
				<nav class="border border-contenedor bg-[#121212] rounded-md p-6 pl-4">
					<div class="flex justify-between items-center">
						<div class="flex">
							<div class="border border-contenedor rounded mr-4 bg-black">
								<button id="themeSwitch">
									<img src="/sol.svg" alt="Theme" width="30" height="30" class="p-2 pb-1" id="themeIcon">
								</button>
							</div>
							<div class="border border-contenedor rounded bg-black">
								<button id="langSwitch">
									<img src="/traductor.svg" alt="Traductor" width="30" height="30" class="p-2 pb-0">
								</button>
							</div>
						</div>
					</div>
				</nav>
			</header>
			<slot />
		</div>

		<script>
			import { ui, defaultLang } from '../i18n/ui';

			let currentLang = localStorage.getItem('lang') || '${lang}';
			let currentTheme = localStorage.getItem('theme') || 'light';

			function switchLanguage() {
				currentLang = currentLang === 'en' ? 'es' : 'en';
				localStorage.setItem('lang', currentLang);
				updateContent();
			}

			function switchTheme() {
				currentTheme = currentTheme === 'light' ? 'dark' : 'light';
				localStorage.setItem('theme', currentTheme);
				updateTheme();
			}

			function updateContent() {
				document.querySelectorAll('[data-i18n]').forEach(el => {
					const key = el.getAttribute('data-i18n');
					if (key) {
						el.textContent = key.split('.').reduce((obj, k) => obj && obj[k], ui[currentLang]) || key;
					}
				});
				document.querySelectorAll('[data-i18n-placeholder]').forEach(el => {
					const key = el.getAttribute('data-i18n-placeholder');
					if (key) {
						el.setAttribute('placeholder', key.split('.').reduce((obj, k) => obj && obj[k], ui[currentLang]) || key);
					}
				});
				document.documentElement.lang = currentLang;
				
				// Dispatch a custom event to notify components of language change
				window.dispatchEvent(new CustomEvent('languagechange', { detail: { lang: currentLang } }));
			}

			function updateTheme() {
				if (currentTheme === 'dark') {
					document.documentElement.classList.add('dark');
					document.getElementById('themeIcon').src = '/luna.svg';
				} else {
					document.documentElement.classList.remove('dark');
					document.getElementById('themeIcon').src = 'sol.svg';
				}
			}

			document.getElementById('langSwitch').addEventListener('click', switchLanguage);
			document.getElementById('themeSwitch').addEventListener('click', switchTheme);

			// Initial content and theme update
			document.addEventListener('DOMContentLoaded', () => {
				localStorage.setItem('lang', currentLang);
				localStorage.setItem('theme', currentTheme);
				updateContent();
				updateTheme();
			});
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		padding: 0;
		width: 100%;
		height: 100%;
		overflow-x: hidden;
	}

	nav ul li a{
		font-weight:300
	}
</style>
